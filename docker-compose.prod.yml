version: '3.8'

services:
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - NODE_ENV=production
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY}
      - STRIPE_PUBLISHABLE_KEY=${STRIPE_PUBLISHABLE_KEY}
      - STRIPE_WEBHOOK_SECRET=${STRIPE_WEBHOOK_SECRET}
      - PORT=8000
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
      - ./config:/app/config
    restart: unless-stopped
    networks:
      - neuropilot-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/agents/status"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - REACT_APP_API_URL=http://localhost:8000
    restart: unless-stopped
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - neuropilot-network

  # Trading environment (Python)
  trading-env:
    build:
      context: .
      dockerfile: Dockerfile.python
    volumes:
      - ./backend/agents/trading:/app/trading
      - ./data/trading:/app/data
      - ./logs:/app/logs
    environment:
      - PYTHONPATH=/app
    restart: unless-stopped
    networks:
      - neuropilot-network
    depends_on:
      - backend

  # System monitor
  monitor:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    restart: unless-stopped
    networks:
      - neuropilot-network
    profiles:
      - monitoring

  # Optional: Redis for caching
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    restart: unless-stopped
    networks:
      - neuropilot-network
    profiles:
      - cache

networks:
  neuropilot-network:
    driver: bridge

volumes:
  data:
    driver: local
  logs:
    driver: local
  redis-data:
    driver: local