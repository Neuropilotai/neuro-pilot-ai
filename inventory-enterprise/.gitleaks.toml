# Gitleaks Configuration
# Version: v2.5.1-2025-10-07
#
# Secret detection rules for Inventory Enterprise System.
# Prevents accidental commits of sensitive credentials, API keys,
# tokens, and other secrets.
#
# Usage:
#   gitleaks detect --config .gitleaks.toml
#   gitleaks protect --config .gitleaks.toml --staged
#
# CI/CD Integration:
#   gitleaks detect --source . --report-path gitleaks-report.json --exit-code 1

title = "Inventory Enterprise - Gitleaks Configuration"

[extend]
# Use default gitleaks rules as baseline
useDefault = true

# Allowlist - paths and patterns to exclude from scanning
[allowlist]
description = "Allowlist for test fixtures, mock data, and documentation"

# Exclude test files with mock tokens
paths = [
  '''frontend/dashboard/e2e/fixtures\.ts''',
  '''ops/k6/.*\.js''',
  '''backend/test/.*''',
  '''.*\.spec\.ts''',
  '''.*\.test\.js''',
  '''.*\.mock\.js''',
]

# Allow known test/example patterns
regexes = [
  '''mockSignature''',
  '''test-user-123''',
  '''example\.com''',
  '''localhost''',
  '''127\.0\.0\.1''',
  '''EXAMPLE_KEY''',
  '''YOUR_.*_HERE''',
  '''placeholder''',
  '''<INSERT.*>''',
]

# Custom rules for this project
[[rules]]
id = "jwt-secret-key"
description = "JWT Secret Key"
regex = '''(?i)(jwt[_-]?secret|jwt[_-]?key|token[_-]?secret)\s*[=:]\s*['"]([a-zA-Z0-9_\-+/=]{32,})['"]'''
tags = ["jwt", "secret", "key"]
severity = "CRITICAL"

[[rules]]
id = "database-connection-string"
description = "Database Connection String"
regex = '''(?i)(mongodb|mysql|postgres|postgresql)://[^\s]+:[^\s]+@[^\s]+'''
tags = ["database", "connection-string"]
severity = "CRITICAL"

[[rules]]
id = "openai-api-key"
description = "OpenAI API Key"
regex = '''sk-[a-zA-Z0-9]{48}'''
tags = ["openai", "api-key"]
severity = "CRITICAL"

[[rules]]
id = "aws-access-key"
description = "AWS Access Key ID"
regex = '''(?i)aws[_-]?access[_-]?key[_-]?id\s*[=:]\s*['"]?(AKIA[0-9A-Z]{16})['"]?'''
tags = ["aws", "access-key"]
severity = "CRITICAL"

[[rules]]
id = "aws-secret-access-key"
description = "AWS Secret Access Key"
regex = '''(?i)aws[_-]?secret[_-]?access[_-]?key\s*[=:]\s*['"]?([A-Za-z0-9/+=]{40})['"]?'''
tags = ["aws", "secret-key"]
severity = "CRITICAL"

[[rules]]
id = "stripe-api-key"
description = "Stripe API Key"
regex = '''(?i)(sk|pk)_(test|live)_[0-9a-zA-Z]{24,99}'''
tags = ["stripe", "api-key"]
severity = "HIGH"

[[rules]]
id = "github-token"
description = "GitHub Personal Access Token"
regex = '''ghp_[0-9a-zA-Z]{36}'''
tags = ["github", "token"]
severity = "HIGH"

[[rules]]
id = "github-oauth"
description = "GitHub OAuth Token"
regex = '''gho_[0-9a-zA-Z]{36}'''
tags = ["github", "oauth"]
severity = "HIGH"

[[rules]]
id = "slack-webhook"
description = "Slack Webhook URL"
regex = '''https://hooks\.slack\.com/services/T[a-zA-Z0-9_]{8,10}/B[a-zA-Z0-9_]{8,10}/[a-zA-Z0-9_]{24}'''
tags = ["slack", "webhook"]
severity = "MEDIUM"

[[rules]]
id = "slack-api-token"
description = "Slack API Token"
regex = '''xox[baprs]-[0-9]{10,13}-[0-9]{10,13}-[a-zA-Z0-9]{24,32}'''
tags = ["slack", "api-token"]
severity = "HIGH"

[[rules]]
id = "private-key"
description = "Private Key"
regex = '''-----BEGIN (RSA|DSA|EC|OPENSSH|PGP) PRIVATE KEY-----'''
tags = ["private-key", "cryptography"]
severity = "CRITICAL"

[[rules]]
id = "generic-api-key"
description = "Generic API Key"
regex = '''(?i)api[_-]?key\s*[=:]\s*['"]?([a-zA-Z0-9_\-]{32,})['"]?'''
tags = ["api-key", "generic"]
severity = "HIGH"

[[rules]]
id = "generic-secret"
description = "Generic Secret"
regex = '''(?i)(secret|password|passwd|pwd)\s*[=:]\s*['"]([^'"]{8,})['"]'''
tags = ["secret", "password"]
severity = "MEDIUM"
# Allowlist common false positives
[rules.allowlist]
regexes = [
  '''process\.env''',
  '''config\.(get|password)''',
  '''placeholder''',
  '''example''',
  '''YOUR_.*_HERE''',
]

[[rules]]
id = "twilio-api-key"
description = "Twilio API Key"
regex = '''SK[0-9a-fA-F]{32}'''
tags = ["twilio", "api-key"]
severity = "HIGH"

[[rules]]
id = "sendgrid-api-key"
description = "SendGrid API Key"
regex = '''SG\.[a-zA-Z0-9_-]{22}\.[a-zA-Z0-9_-]{43}'''
tags = ["sendgrid", "api-key"]
severity = "HIGH"

[[rules]]
id = "mailgun-api-key"
description = "Mailgun API Key"
regex = '''key-[0-9a-zA-Z]{32}'''
tags = ["mailgun", "api-key"]
severity = "MEDIUM"

[[rules]]
id = "credentials-file"
description = "Credentials or secrets file"
regex = '''(?i)(credentials|secrets)\.(json|yaml|yml|env)'''
fileNameRegex = '''.*'''
tags = ["credentials", "file"]
severity = "HIGH"
[rules.allowlist]
paths = [
  '''docs/.*''',
  '''examples/.*''',
]

[[rules]]
id = "env-file"
description = ".env file with secrets"
regex = '''(?i)(jwt_secret|db_password|api_key|secret_key)\s*=\s*.+'''
fileNameRegex = '''\.env.*'''
tags = ["env", "config"]
severity = "HIGH"
[rules.allowlist]
regexes = [
  '''\$\{.*\}''',
  '''<.*>''',
  '''YOUR_.*_HERE''',
  '''example''',
]

[[rules]]
id = "hardcoded-ip-address"
description = "Hardcoded IP Address (potential infrastructure leak)"
regex = '''(?:[0-9]{1,3}\.){3}[0-9]{1,3}'''
tags = ["ip-address", "infrastructure"]
severity = "LOW"
[rules.allowlist]
regexes = [
  '''127\.0\.0\.1''',
  '''0\.0\.0\.0''',
  '''localhost''',
  '''192\.168\..*''',
  '''10\..*''',
  '''172\.(1[6-9]|2[0-9]|3[01])\..*''',
]

[[rules]]
id = "npm-token"
description = "NPM Access Token"
regex = '''npm_[a-zA-Z0-9]{36}'''
tags = ["npm", "token"]
severity = "HIGH"

[[rules]]
id = "pypi-token"
description = "PyPI Token"
regex = '''pypi-AgEIcHlwaS5vcmc[A-Za-z0-9\-_]{50,}'''
tags = ["pypi", "token"]
severity = "HIGH"

[[rules]]
id = "docker-auth"
description = "Docker Auth Config"
regex = '''(?i)"auth"\s*:\s*"[A-Za-z0-9+/=]{20,}"'''
tags = ["docker", "auth"]
severity = "MEDIUM"

[[rules]]
id = "bearer-token"
description = "Bearer Token in Authorization Header"
regex = '''(?i)authorization\s*:\s*bearer\s+[a-zA-Z0-9\-._~+/]+=*'''
tags = ["bearer-token", "authorization"]
severity = "MEDIUM"

[[rules]]
id = "ssh-private-key-file"
description = "SSH Private Key File"
regex = '''id_(rsa|dsa|ecdsa|ed25519)'''
fileNameRegex = '''.*'''
tags = ["ssh", "private-key"]
severity = "CRITICAL"

[[rules]]
id = "basic-auth-url"
description = "Basic Auth in URL"
regex = '''(?i)[a-z]+://[a-z0-9]+:[a-z0-9]+@[a-z0-9\-\.]+'''
tags = ["basic-auth", "url"]
severity = "HIGH"

[[rules]]
id = "password-in-code"
description = "Hardcoded Password"
regex = '''(?i)(password|passwd|pwd)\s*=\s*['"]([^'"\s]{6,})['"]'''
tags = ["password", "hardcoded"]
severity = "HIGH"
[rules.allowlist]
regexes = [
  '''placeholder''',
  '''example''',
  '''test''',
  '''demo''',
  '''password123''',
  '''changeme''',
]
