# PostgreSQL Primary Configuration for v2.8.0
# NeuroInnovate Inventory Enterprise

# Connection Settings
listen_addresses = '*'
port = 5432
max_connections = 200
superuser_reserved_connections = 3

# Memory Settings
shared_buffers = 256MB
effective_cache_size = 768MB
maintenance_work_mem = 64MB
work_mem = 4MB

# WAL (Write-Ahead Logging) Settings
wal_level = replica
max_wal_senders = 10
max_replication_slots = 10
wal_keep_size = 1GB
hot_standby = on

# Checkpoint Settings
checkpoint_timeout = 10min
checkpoint_completion_target = 0.9
max_wal_size = 1GB
min_wal_size = 80MB

# Archiving (for backup)
archive_mode = on
archive_command = 'test ! -f /backups/archive/%f && cp %p /backups/archive/%f'

# Query Planner
random_page_cost = 1.1
effective_io_concurrency = 200
default_statistics_target = 100

# Logging
logging_collector = on
log_destination = 'stderr'
log_directory = 'log'
log_filename = 'postgresql-%Y-%m-%d.log'
log_rotation_age = 1d
log_rotation_size = 100MB
log_line_prefix = '%t [%p]: user=%u,db=%d,app=%a,client=%h '
log_timezone = 'UTC'
log_statement = 'mod'
log_duration = off
log_min_duration_statement = 1000
log_checkpoints = on
log_connections = on
log_disconnections = on
log_lock_waits = on
log_temp_files = 0
log_autovacuum_min_duration = 0

# Autovacuum
autovacuum = on
autovacuum_max_workers = 3
autovacuum_naptime = 1min
autovacuum_vacuum_threshold = 50
autovacuum_analyze_threshold = 50
autovacuum_vacuum_scale_factor = 0.02
autovacuum_analyze_scale_factor = 0.01

# Statement Stats
shared_preload_libraries = 'pg_stat_statements'
pg_stat_statements.track = all
pg_stat_statements.max = 10000

# Locale
lc_messages = 'en_US.UTF-8'
lc_monetary = 'en_US.UTF-8'
lc_numeric = 'en_US.UTF-8'
lc_time = 'en_US.UTF-8'
default_text_search_config = 'pg_catalog.english'

# Timezone
timezone = 'UTC'

# Client Connection Defaults
datestyle = 'iso, mdy'
intervalstyle = 'postgres'
client_encoding = 'UTF8'

# Lock Management
deadlock_timeout = 1s

# Optimization for inventory workload
# Read-heavy workload (90% reads, 10% writes)
# Multi-tenant isolation via tenant_id
# Frequent joins on foreign keys
# Time-series data (invoice_date, created_at)
