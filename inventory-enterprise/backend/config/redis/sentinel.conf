# Redis Sentinel Configuration for v2.8.0
# NeuroInnovate Inventory Enterprise
# Ports: 26379, 26380, 26381

# Network
bind 0.0.0.0
port 26379
protected-mode no

# General
daemonize no
pidfile /var/run/redis-sentinel.pid
logfile ""
dir /tmp

# Sentinel monitoring
# Format: sentinel monitor <master-name> <ip> <port> <quorum>
# quorum=2 requires 2 sentinels to agree on master failure
sentinel monitor mymaster redis-master 6379 2

# Timeouts (in milliseconds)
# How long master should be unreachable to be considered down
sentinel down-after-milliseconds mymaster 5000

# Failover timeout
sentinel failover-timeout mymaster 10000

# Parallel syncs during failover
# Only 1 replica syncs at a time to avoid overwhelming the new master
sentinel parallel-syncs mymaster 1

# Authentication (if Redis is password-protected)
# sentinel auth-pass mymaster YourStrongRedisPassword2025!

# Notification scripts (optional)
# sentinel notification-script mymaster /path/to/notification-script.sh
# sentinel client-reconfig-script mymaster /path/to/reconfig-script.sh

# Sentinel configuration will be rewritten by Sentinel itself
# to persist state changes (e.g., new master after failover)
# This is normal behavior - don't be alarmed when you see this file change

# Advanced Sentinel options
sentinel deny-scripts-reconfig yes

# Sentinel will announce itself to other sentinels and replicas
# This is critical for proper cluster formation
# announce-ip and announce-port can be configured if behind NAT/proxy

# Quorum explanation:
# Quorum=2 means 2 sentinels must agree that master is down before failover
# With 3 sentinels, this provides fault tolerance:
# - 1 sentinel down: cluster still functional (2 remain)
# - 2 sentinels down: no failover possible (need quorum)
# This prevents split-brain scenarios

# Production recommendations:
# 1. Always use odd number of sentinels (3, 5, 7)
# 2. Quorum = (N/2) + 1 where N is number of sentinels
# 3. Deploy sentinels on separate hosts from Redis nodes
# 4. Monitor sentinel logs for failover events
# 5. Test failover scenarios regularly

# Monitoring commands:
# SENTINEL masters - List all monitored masters
# SENTINEL replicas mymaster - List all replicas
# SENTINEL sentinels mymaster - List all sentinels
# SENTINEL get-master-addr-by-name mymaster - Get current master
# SENTINEL failover mymaster - Manual failover
# SENTINEL reset mymaster - Reset sentinel state
