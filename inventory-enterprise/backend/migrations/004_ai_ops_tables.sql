-- Migration 004: AI Ops Automation Tables
-- Version: v2.6.0-2025-10-07
-- Description: Tables for AI Ops anomaly predictions, remediation logs, and statistics

-- ═══════════════════════════════════════════════════════════════════════════════
-- Table: ai_anomaly_predictions
-- ═══════════════════════════════════════════════════════════════════════════════
-- Stores predictions generated by AI Ops Agent

CREATE TABLE IF NOT EXISTS ai_anomaly_predictions (
    id INTEGER PRIMARY KEY AUTOINCREMENT,

    -- Incident details
    incident_type TEXT NOT NULL,
    severity TEXT NOT NULL CHECK (severity IN ('critical', 'high', 'medium', 'low')),
    confidence REAL NOT NULL CHECK (confidence >= 0 AND confidence <= 1),
    anomaly_score REAL NOT NULL CHECK (anomaly_score >= 0 AND anomaly_score <= 1),

    -- Temporal data
    predicted_timestamp TEXT NOT NULL,  -- When incident is predicted to occur
    detected_timestamp TEXT NOT NULL DEFAULT (datetime('now')),  -- When prediction was made
    occurred_timestamp TEXT,  -- Actual incident time (if confirmed)

    -- Metric information
    metric_name TEXT NOT NULL,
    metric_value REAL NOT NULL,
    threshold_value REAL,

    -- Analysis
    root_cause TEXT,  -- JSON: { primaryCause, correlation, relatedMetrics }
    current_metrics TEXT,  -- JSON: Full metrics snapshot at prediction time

    -- Validation
    confirmed INTEGER DEFAULT 0,  -- 1 if incident actually occurred
    false_positive INTEGER DEFAULT 0,  -- 1 if prediction was incorrect

    -- Audit
    created_at TEXT NOT NULL DEFAULT (datetime('now')),
    updated_at TEXT NOT NULL DEFAULT (datetime('now'))
);

-- Indexes for ai_anomaly_predictions
CREATE INDEX IF NOT EXISTS idx_anomaly_predictions_type
    ON ai_anomaly_predictions(incident_type);
CREATE INDEX IF NOT EXISTS idx_anomaly_predictions_severity
    ON ai_anomaly_predictions(severity);
CREATE INDEX IF NOT EXISTS idx_anomaly_predictions_detected
    ON ai_anomaly_predictions(detected_timestamp DESC);
CREATE INDEX IF NOT EXISTS idx_anomaly_predictions_predicted
    ON ai_anomaly_predictions(predicted_timestamp);
CREATE INDEX IF NOT EXISTS idx_anomaly_predictions_metric
    ON ai_anomaly_predictions(metric_name);
CREATE INDEX IF NOT EXISTS idx_anomaly_predictions_confirmed
    ON ai_anomaly_predictions(confirmed);
CREATE INDEX IF NOT EXISTS idx_anomaly_predictions_false_positive
    ON ai_anomaly_predictions(false_positive);

-- ═══════════════════════════════════════════════════════════════════════════════
-- Table: ai_remediation_log
-- ═══════════════════════════════════════════════════════════════════════════════
-- Logs all remediation actions executed by AI Ops Agent

CREATE TABLE IF NOT EXISTS ai_remediation_log (
    id INTEGER PRIMARY KEY AUTOINCREMENT,

    -- Incident reference
    incident_id TEXT NOT NULL,
    incident_type TEXT NOT NULL,
    severity TEXT NOT NULL,

    -- Remediation details
    remediation_action TEXT NOT NULL,  -- Playbook name
    success INTEGER NOT NULL DEFAULT 0,  -- 1 if successful, 0 if failed
    response_time_ms INTEGER NOT NULL,  -- Time from detection to remediation

    -- Actions taken
    actions_taken TEXT,  -- JSON array of actions executed
    error_message TEXT,  -- Error details if failed

    -- Validation
    validated INTEGER DEFAULT 0,  -- 1 if remediation was verified successful
    validation_timestamp TEXT,

    -- Audit
    executed_at TEXT NOT NULL DEFAULT (datetime('now')),
    executed_by TEXT DEFAULT 'ai_ops_agent'
);

-- Indexes for ai_remediation_log
CREATE INDEX IF NOT EXISTS idx_remediation_log_incident_id
    ON ai_remediation_log(incident_id);
CREATE INDEX IF NOT EXISTS idx_remediation_log_type
    ON ai_remediation_log(incident_type);
CREATE INDEX IF NOT EXISTS idx_remediation_log_success
    ON ai_remediation_log(success);
CREATE INDEX IF NOT EXISTS idx_remediation_log_executed
    ON ai_remediation_log(executed_at DESC);
CREATE INDEX IF NOT EXISTS idx_remediation_log_response_time
    ON ai_remediation_log(response_time_ms);

-- ═══════════════════════════════════════════════════════════════════════════════
-- Table: ai_ops_statistics
-- ═══════════════════════════════════════════════════════════════════════════════
-- Stores periodic statistics snapshots for AI Ops Agent performance

CREATE TABLE IF NOT EXISTS ai_ops_statistics (
    id INTEGER PRIMARY KEY AUTOINCREMENT,

    -- Counters
    checks_performed INTEGER NOT NULL DEFAULT 0,
    incidents_predicted INTEGER NOT NULL DEFAULT 0,
    remediations_triggered INTEGER NOT NULL DEFAULT 0,
    remediations_succeeded INTEGER NOT NULL DEFAULT 0,
    remediations_failed INTEGER NOT NULL DEFAULT 0,
    false_positives INTEGER NOT NULL DEFAULT 0,
    true_positives INTEGER NOT NULL DEFAULT 0,

    -- Performance metrics
    mean_response_time_ms INTEGER NOT NULL DEFAULT 0,
    success_rate REAL NOT NULL DEFAULT 0.0,  -- % of successful remediations
    accuracy_rate REAL,  -- % of correct predictions (TP / (TP + FP))

    -- Time period
    uptime_ms INTEGER NOT NULL DEFAULT 0,
    period_start TEXT NOT NULL DEFAULT (datetime('now')),
    period_end TEXT NOT NULL DEFAULT (datetime('now')),

    -- Audit
    created_at TEXT NOT NULL DEFAULT (datetime('now'))
);

-- Index for ai_ops_statistics
CREATE INDEX IF NOT EXISTS idx_ops_statistics_period
    ON ai_ops_statistics(period_start, period_end);

-- ═══════════════════════════════════════════════════════════════════════════════
-- Table: ai_model_metrics
-- ═══════════════════════════════════════════════════════════════════════════════
-- Tracks AI model performance and training history

CREATE TABLE IF NOT EXISTS ai_model_metrics (
    id INTEGER PRIMARY KEY AUTOINCREMENT,

    -- Model identification
    model_name TEXT NOT NULL,
    model_type TEXT NOT NULL,  -- 'lstm', 'isolation_forest', 'prophet', etc.
    version TEXT NOT NULL,

    -- Training information
    trained_at TEXT NOT NULL DEFAULT (datetime('now')),
    training_samples INTEGER NOT NULL,
    training_duration_ms INTEGER,

    -- Performance metrics
    accuracy REAL,
    precision REAL,
    recall REAL,
    f1_score REAL,
    mse REAL,  -- Mean Squared Error for regression models
    mae REAL,  -- Mean Absolute Error

    -- Model parameters
    parameters TEXT,  -- JSON: Model-specific parameters

    -- Status
    is_active INTEGER NOT NULL DEFAULT 1,  -- 1 if currently in use

    -- Audit
    created_at TEXT NOT NULL DEFAULT (datetime('now'))
);

-- Indexes for ai_model_metrics
CREATE INDEX IF NOT EXISTS idx_model_metrics_name
    ON ai_model_metrics(model_name);
CREATE INDEX IF NOT EXISTS idx_model_metrics_active
    ON ai_model_metrics(is_active, trained_at DESC);

-- ═══════════════════════════════════════════════════════════════════════════════
-- Table: ai_ops_config
-- ═══════════════════════════════════════════════════════════════════════════════
-- Stores AI Ops configuration and feature toggles

CREATE TABLE IF NOT EXISTS ai_ops_config (
    id INTEGER PRIMARY KEY AUTOINCREMENT,

    -- Configuration key-value
    config_key TEXT NOT NULL UNIQUE,
    config_value TEXT NOT NULL,
    config_type TEXT NOT NULL DEFAULT 'string',  -- 'string', 'number', 'boolean', 'json'

    -- Metadata
    description TEXT,
    category TEXT,  -- 'prediction', 'remediation', 'alerting', 'general'

    -- Validation
    min_value REAL,
    max_value REAL,
    allowed_values TEXT,  -- JSON array of allowed values

    -- Audit
    created_at TEXT NOT NULL DEFAULT (datetime('now')),
    updated_at TEXT NOT NULL DEFAULT (datetime('now')),
    updated_by TEXT DEFAULT 'system'
);

-- Index for ai_ops_config
CREATE INDEX IF NOT EXISTS idx_ops_config_key
    ON ai_ops_config(config_key);
CREATE INDEX IF NOT EXISTS idx_ops_config_category
    ON ai_ops_config(category);

-- ═══════════════════════════════════════════════════════════════════════════════
-- Initial Configuration Values
-- ═══════════════════════════════════════════════════════════════════════════════

INSERT OR IGNORE INTO ai_ops_config (config_key, config_value, config_type, description, category) VALUES
    ('aiops.enabled', 'true', 'boolean', 'Enable/disable AI Ops Agent', 'general'),
    ('aiops.check_interval_ms', '60000', 'number', 'Monitoring check interval in milliseconds', 'general'),
    ('aiops.prediction_window_hours', '24', 'number', 'Prediction horizon in hours', 'prediction'),
    ('aiops.anomaly_threshold', '0.85', 'number', 'Anomaly score threshold (0-1)', 'prediction'),
    ('aiops.min_confidence', '0.75', 'number', 'Minimum prediction confidence (0-1)', 'prediction'),
    ('aiops.auto_remediation_enabled', 'true', 'boolean', 'Enable automatic remediation', 'remediation'),
    ('aiops.dry_run', 'false', 'boolean', 'Dry run mode (simulate actions)', 'remediation'),
    ('aiops.remediation_timeout_ms', '30000', 'number', 'Remediation action timeout', 'remediation'),
    ('aiops.slack_enabled', 'false', 'boolean', 'Enable Slack alerts', 'alerting'),
    ('aiops.email_enabled', 'false', 'boolean', 'Enable email alerts', 'alerting'),
    ('aiops.pagerduty_enabled', 'false', 'boolean', 'Enable PagerDuty alerts', 'alerting');

-- ═══════════════════════════════════════════════════════════════════════════════
-- Views for Analytics
-- ═══════════════════════════════════════════════════════════════════════════════

-- View: Recent predictions with remediation results
CREATE VIEW IF NOT EXISTS v_recent_predictions AS
SELECT
    p.id,
    p.incident_type,
    p.severity,
    p.confidence,
    p.anomaly_score,
    p.predicted_timestamp,
    p.detected_timestamp,
    p.confirmed,
    p.false_positive,
    r.success AS remediation_success,
    r.response_time_ms,
    r.executed_at AS remediation_executed_at
FROM ai_anomaly_predictions p
LEFT JOIN ai_remediation_log r ON r.incident_id = p.id
WHERE p.detected_timestamp >= datetime('now', '-7 days')
ORDER BY p.detected_timestamp DESC;

-- View: AI Ops performance metrics
CREATE VIEW IF NOT EXISTS v_aiops_performance AS
SELECT
    COUNT(*) AS total_predictions,
    SUM(CASE WHEN confirmed = 1 THEN 1 ELSE 0 END) AS true_positives,
    SUM(CASE WHEN false_positive = 1 THEN 1 ELSE 0 END) AS false_positives,
    ROUND(AVG(confidence) * 100, 2) AS avg_confidence_pct,
    ROUND(AVG(anomaly_score) * 100, 2) AS avg_anomaly_score_pct,
    (SELECT COUNT(*) FROM ai_remediation_log WHERE success = 1) AS successful_remediations,
    (SELECT COUNT(*) FROM ai_remediation_log WHERE success = 0) AS failed_remediations,
    (SELECT ROUND(AVG(response_time_ms), 0) FROM ai_remediation_log) AS avg_response_time_ms
FROM ai_anomaly_predictions
WHERE detected_timestamp >= datetime('now', '-7 days');

-- ═══════════════════════════════════════════════════════════════════════════════
-- Triggers for Updated Timestamps
-- ═══════════════════════════════════════════════════════════════════════════════

CREATE TRIGGER IF NOT EXISTS update_anomaly_predictions_timestamp
AFTER UPDATE ON ai_anomaly_predictions
FOR EACH ROW
BEGIN
    UPDATE ai_anomaly_predictions
    SET updated_at = datetime('now')
    WHERE id = NEW.id;
END;

CREATE TRIGGER IF NOT EXISTS update_ops_config_timestamp
AFTER UPDATE ON ai_ops_config
FOR EACH ROW
BEGIN
    UPDATE ai_ops_config
    SET updated_at = datetime('now')
    WHERE id = NEW.id;
END;

-- ═══════════════════════════════════════════════════════════════════════════════
-- Migration Complete
-- ═══════════════════════════════════════════════════════════════════════════════

-- Version tracking
INSERT INTO schema_version (version, description, applied_at)
VALUES ('004', 'AI Ops Automation Tables', datetime('now'));
